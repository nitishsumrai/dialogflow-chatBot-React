[{"C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\index.js":"1","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\store\\index.js":"2","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\App.js":"3","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\index.js":"4","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Reducers\\queryBot.js":"5","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\Messages.js":"6","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\AgentMessage.js":"7","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\ChatBotButton.js":"8","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\ChatBot.js":"9","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\UserMessage.js":"10","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\Loader.js":"11","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\Dashboard.js":"12","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Action\\ActionTypes.js":"13","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\DashboardItem.js":"14","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Action\\queryBot.js":"15","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\helpers.js\\utils.js":"16"},{"size":437,"mtime":1611400671442,"results":"17","hashOfConfig":"18"},{"size":297,"mtime":1610084608708,"results":"19","hashOfConfig":"18"},{"size":455,"mtime":1610097200664,"results":"20","hashOfConfig":"18"},{"size":423,"mtime":1610103775651,"results":"21","hashOfConfig":"18"},{"size":1218,"mtime":1610104154840,"results":"22","hashOfConfig":"18"},{"size":747,"mtime":1611400136347,"results":"23","hashOfConfig":"18"},{"size":849,"mtime":1610089614281,"results":"24","hashOfConfig":"18"},{"size":996,"mtime":1610093448130,"results":"25","hashOfConfig":"18"},{"size":2581,"mtime":1610104653302,"results":"26","hashOfConfig":"18"},{"size":389,"mtime":1610089632443,"results":"27","hashOfConfig":"18"},{"size":216,"mtime":1610103870482,"results":"28","hashOfConfig":"18"},{"size":1155,"mtime":1610104069134,"results":"29","hashOfConfig":"18"},{"size":263,"mtime":1610091982822,"results":"30","hashOfConfig":"18"},{"size":260,"mtime":1610101151515,"results":"31","hashOfConfig":"18"},{"size":1430,"mtime":1610097151336,"results":"32","hashOfConfig":"18"},{"size":416,"mtime":1610087419637,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"stzjem",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\index.js",[],["70","71"],"C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\store\\index.js",[],"C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\App.js",[],"C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\index.js",[],"C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Reducers\\queryBot.js",[],"C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\Messages.js",[],"C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\AgentMessage.js",["72"],"import React, { Component } from \"react\";\r\n\r\nclass AgentMessage extends Component {\r\n  render() {\r\n    const { msg } = this.props;\r\n    return (\r\n      <div className=\"agent-message-container\">\r\n        <span className=\"agent-avatar-message-time\">\r\n          <span className=\"name\">\r\n            <p>agent_name</p>\r\n          </span>\r\n          <div className=\"agent-avatar-message\">\r\n            <img src=\"https://media-exp1.licdn.com/dms/image/C560BAQGcp8x8DO-jPQ/company-logo_200_200/0/1589439972484?e=2159024400&v=beta&t=pszKMR5SYnxx0c5qVxJ1k9xIXKD94lJuioG1eYQWpDs\" />\r\n            <div className=\"agent-message-card\">\r\n              <p>{msg}</p>\r\n            </div>\r\n          </div>\r\n          <span className=\"time\">\r\n            <p>5:05pm</p>\r\n          </span>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgentMessage;\r\n","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\ChatBotButton.js",[],"C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\ChatBot.js",["73","74"],"import React, { Component } from \"react\";\r\n// get our fontawesome imports\r\nimport { connect } from \"react-redux\";\r\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { startQuerying } from \"../Action/queryBot\";\r\n\r\nimport { Messages } from \"./\";\r\nclass ChatBot extends Component {\r\n  constructor() {\r\n    super();\r\n    this.setState({\r\n      input: \"\",\r\n      // usermsg: [],\r\n    });\r\n  }\r\n  handleOnChangeInput = (e) => {\r\n    // console.log(this.state.input);\r\n    this.setState({\r\n      input: e.target.value,\r\n    });\r\n  };\r\n  handleFormSubmit = (e) => {\r\n    document.getElementById(\"input\").value = \"\";\r\n    e.preventDefault();\r\n    console.log(\"state\", this.state);\r\n    const { input } = this.state;\r\n    this.setState({\r\n      input: \"\",\r\n    });\r\n    if (input) {\r\n      this.props.dispatch(startQuerying(input));\r\n    }\r\n  };\r\n  render() {\r\n    console.log(this.props);\r\n    const { inProgress } = this.props;\r\n    return (\r\n      <div className=\"chat-bot add-box-shadow\">\r\n        <div>\r\n          <header className=\"header-chat-bot\">\r\n            <span className=\"center-child-elements image-info-chat-bot \">\r\n              <span className=\"image-status\">\r\n                <img\r\n                  src=\"https://media-exp1.licdn.com/dms/image/C560BAQGcp8x8DO-jPQ/company-logo_200_200/0/1589439972484?e=2159024400&v=beta&t=pszKMR5SYnxx0c5qVxJ1k9xIXKD94lJuioG1eYQWpDs\"\r\n                  alt=\"bot-image\"\r\n                />\r\n              </span>\r\n              <span className=\"name-status\">\r\n                <h4>triny Bot</h4>\r\n                <h6>Online</h6>\r\n              </span>\r\n            </span>\r\n          </header>\r\n\r\n          <Messages msgLog={this.props.msgLog} />\r\n          <footer>\r\n            <div>\r\n              <form>\r\n                <input\r\n                  id=\"input\"\r\n                  onChange={this.handleOnChangeInput}\r\n                  className=\"text-input\"\r\n                  type=\"input\"\r\n                  placeholder=\"Enter the msg\"\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"submit-input\"\r\n                  onClick={this.handleFormSubmit}\r\n                >\r\n                  <FontAwesomeIcon icon={faPaperPlane} />\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(ChatBot);\r\n","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\UserMessage.js",[],"C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\Loader.js",[],"C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\Dashboard.js",["75"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport DashboardItem from \"./DashboardItem\";\r\nimport Loader from \"./Loader\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const DashboardList = [];\r\n    const { intents, inProgress } = this.props;\r\n\r\n    for (var i = 0; i < intents.length; i++) {\r\n      DashboardList.push(<DashboardItem intent={intents[i]} />);\r\n    }\r\n    return (\r\n      <div className=\"dashboard-container\">\r\n        <div className=\"nav-dashboard\">\r\n          <div className=\"triny-logo\">\r\n            <img src=\"https://media-exp1.licdn.com/dms/image/C560BAQGcp8x8DO-jPQ/company-logo_200_200/0/1589439972484?e=2159024400&v=beta&t=pszKMR5SYnxx0c5qVxJ1k9xIXKD94lJuioG1eYQWpDs\"></img>\r\n            <h2>Triny Bot Intent</h2>\r\n          </div>\r\n        </div>\r\n        {inProgress ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className=\"dashboard-list\">{DashboardList}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return { ...state };\r\n}\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Action\\ActionTypes.js",[],"C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Components\\DashboardItem.js",[],"C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\Action\\queryBot.js",[],"C:\\Users\\Nitish\\Desktop\\Projects\\task1\\Front-End\\chatbot\\src\\helpers.js\\utils.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":13,"column":13,"nodeType":"82","endLine":13,"endColumn":188},{"ruleId":"83","severity":1,"message":"84","line":37,"column":13,"nodeType":"85","messageId":"86","endLine":37,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":44,"column":17,"nodeType":"82","endLine":47,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":19,"column":13,"nodeType":"82","endLine":19,"endColumn":186},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'inProgress' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]