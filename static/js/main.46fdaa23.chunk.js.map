{"version":3,"sources":["Action/ActionTypes.js","helpers.js/utils.js","Action/queryBot.js","Components/ChatBotButton.js","Components/ChatBot.js","Components/Messages.js","Components/AgentMessage.js","Components/UserMessage.js","Components/DashboardItem.js","Components/Loader.js","Components/Dashboard.js","Components/App.js","Reducers/queryBot.js","index.js","store/index.js"],"names":["QUERRY_START","QUERRY_SUCCESS","QUERRY_FAIL","ADD_INTENT","VISIBILITY","getFormBody","params","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","startQuerying","userQuery","console","log","dispatch","type","fetch","method","headers","body","then","resolve","json","data","msg","response","request","queriedSuccessfully","intent","errorMessage","message","error","setVisibility","visibility","ChatBotButton","handleVisibility","props","className","onClick","this","icon","faTimes","faCoffee","React","Component","connect","state","ChatBot","handleOnChangeInput","e","setState","input","target","value","handleFormSubmit","document","getElementById","preventDefault","inProgress","src","alt","msgLog","id","onChange","placeholder","faPaperPlane","Messages","componentDidUpdate","element","scrollTop","scrollHeight","MessageLog","i","length","AgentMessage","UserMessage","DashboardItem","Loader","Dashboard","DashboardList","intents","App","intialQuerryState","isQuerried","queryBot","action","store","createStore","reducer","applyMiddleware","thunk","logger","getState","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.46fdaa23.chunk.js","sourcesContent":["const QUERRY_START = \"QUERRY_START\";\r\nconst QUERRY_SUCCESS = \"QUERRY_SUCCESS\";\r\nconst QUERRY_FAIL = \"QUERRY_FAIL\";\r\nconst ADD_INTENT = \"ADD_INTENT\";\r\nconst VISIBILITY = \"VISIBILITY\";\r\nexport { QUERRY_START, QUERRY_SUCCESS, QUERRY_FAIL, ADD_INTENT, VISIBILITY };\r\n","//  this file will store all the functions which are being used mulitple times\r\nexport function getFormBody(params) {\r\n  let formBody = [];\r\n  for (let property in params) {\r\n    // \"user name\" = \"user%20name\"\r\n    let encodedKey = encodeURIComponent(property);\r\n    let encodedValue = encodeURIComponent(params[property]);\r\n    formBody.push(encodedKey + \"=\" + encodedValue);\r\n  }\r\n  return formBody.join(\"&\");\r\n}\r\n","import {\r\n  QUERRY_SUCCESS,\r\n  QUERRY_FAIL,\r\n  QUERRY_START,\r\n  ADD_INTENT,\r\n  VISIBILITY,\r\n} from \"./ActionTypes\";\r\n\r\nimport { getFormBody } from \"../helpers.js/utils\";\r\nexport function startQuerry() {\r\n  return {\r\n    type: QUERRY_START,\r\n  };\r\n}\r\nexport function querryFailed(errorMessage) {\r\n  return {\r\n    type: QUERRY_FAIL,\r\n    error: errorMessage,\r\n  };\r\n}\r\nexport function startQuerying(userQuery) {\r\n  console.log(\"**********\", userQuery);\r\n  return (dispatch) => {\r\n    dispatch(startQuerry());\r\n    const urlApi = `http://localhost:8000/api/v1/query-bot`;\r\n    fetch(urlApi, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      body: getFormBody({ userQuery }),\r\n    })\r\n      .then((resolve) => resolve.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.data) {\r\n          dispatch(queriedSuccessfully(data.data.msg, userQuery));\r\n          dispatch(sendIntent(data.data.intent));\r\n          return;\r\n        }\r\n        dispatch(querryFailed(data.message));\r\n      });\r\n  };\r\n}\r\nexport function queriedSuccessfully(msg, userQuery) {\r\n  return {\r\n    type: QUERRY_SUCCESS,\r\n    response: msg,\r\n    request: userQuery,\r\n  };\r\n}\r\nexport function sendIntent(intent) {\r\n  return {\r\n    type: ADD_INTENT,\r\n    intent: intent,\r\n  };\r\n}\r\nexport function setVisibility(visibility) {\r\n  return {\r\n    type: VISIBILITY,\r\n    visibility,\r\n  };\r\n}\r\n","import React from \"react\";\r\n// get our fontawesome imports\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faCoffee } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { setVisibility } from \"../Action/queryBot\";\r\nclass ChatBotButton extends React.Component {\r\n  handleVisibility = () => {\r\n    if (this.props.visibility) {\r\n      this.props.dispatch(setVisibility(false));\r\n    } else {\r\n      this.props.dispatch(setVisibility(true));\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"chat-bot-button center-child-elements\"\r\n        onClick={this.handleVisibility}\r\n      >\r\n        {this.props.visibility ? (\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        ) : (\r\n          <FontAwesomeIcon icon={faCoffee} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChatBotButton);\r\n","import React, { Component } from \"react\";\r\n// get our fontawesome imports\r\nimport { connect } from \"react-redux\";\r\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { startQuerying } from \"../Action/queryBot\";\r\n\r\nimport { Messages } from \"./\";\r\nclass ChatBot extends Component {\r\n  constructor() {\r\n    super();\r\n    this.setState({\r\n      input: \"\",\r\n      // usermsg: [],\r\n    });\r\n  }\r\n  handleOnChangeInput = (e) => {\r\n    // console.log(this.state.input);\r\n    this.setState({\r\n      input: e.target.value,\r\n    });\r\n  };\r\n  handleFormSubmit = (e) => {\r\n    document.getElementById(\"input\").value = \"\";\r\n    e.preventDefault();\r\n    console.log(\"state\", this.state);\r\n    const { input } = this.state;\r\n    this.setState({\r\n      input: \"\",\r\n    });\r\n    if (input) {\r\n      this.props.dispatch(startQuerying(input));\r\n    }\r\n  };\r\n  render() {\r\n    console.log(this.props);\r\n    const { inProgress } = this.props;\r\n    return (\r\n      <div className=\"chat-bot add-box-shadow\">\r\n        <div>\r\n          <header className=\"header-chat-bot\">\r\n            <span className=\"center-child-elements image-info-chat-bot \">\r\n              <span className=\"image-status\">\r\n                <img\r\n                  src=\"https://media-exp1.licdn.com/dms/image/C560BAQGcp8x8DO-jPQ/company-logo_200_200/0/1589439972484?e=2159024400&v=beta&t=pszKMR5SYnxx0c5qVxJ1k9xIXKD94lJuioG1eYQWpDs\"\r\n                  alt=\"bot-image\"\r\n                />\r\n              </span>\r\n              <span className=\"name-status\">\r\n                <h4>triny Bot</h4>\r\n                <h6>Online</h6>\r\n              </span>\r\n            </span>\r\n          </header>\r\n\r\n          <Messages msgLog={this.props.msgLog} />\r\n          <footer>\r\n            <div>\r\n              <form>\r\n                <input\r\n                  id=\"input\"\r\n                  onChange={this.handleOnChangeInput}\r\n                  className=\"text-input\"\r\n                  type=\"input\"\r\n                  placeholder=\"Enter the msg\"\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"submit-input\"\r\n                  onClick={this.handleFormSubmit}\r\n                >\r\n                  <FontAwesomeIcon icon={faPaperPlane} />\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(ChatBot);\r\n","import React, { Component } from \"react\";\r\nimport { AgentMessage, UserMessage } from \"./\";\r\n\r\nclass Messages extends Component {\r\n\r\n  componentDidUpdate = () => {\r\n    var element = document.getElementById(\"message-list\");\r\n    element.scrollTop = element.scrollHeight;\r\n  }\r\n\r\n  render() {\r\n    const { msgLog } = this.props;\r\n    const MessageLog = [];\r\n    for (var i = 0; i < msgLog.length; i++) {\r\n      if (msgLog[i].request) {\r\n        MessageLog.push(<UserMessage msg={msgLog[i].request} />);\r\n      }\r\n      if (msgLog[i].response) {\r\n        MessageLog.push(<AgentMessage msg={msgLog[i].response} />);\r\n      }\r\n    }\r\n\r\n    return <div className=\"message-list\" id=\"message-list\">{MessageLog}</div>;\r\n  }\r\n}\r\n\r\nexport default Messages;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AgentMessage extends Component {\r\n  render() {\r\n    const { msg } = this.props;\r\n    return (\r\n      <div className=\"agent-message-container\">\r\n        <span className=\"agent-avatar-message-time\">\r\n          <span className=\"name\">\r\n            <p>agent_name</p>\r\n          </span>\r\n          <div className=\"agent-avatar-message\">\r\n            <img src=\"https://media-exp1.licdn.com/dms/image/C560BAQGcp8x8DO-jPQ/company-logo_200_200/0/1589439972484?e=2159024400&v=beta&t=pszKMR5SYnxx0c5qVxJ1k9xIXKD94lJuioG1eYQWpDs\" />\r\n            <div className=\"agent-message-card\">\r\n              <p>{msg}</p>\r\n            </div>\r\n          </div>\r\n          <span className=\"time\">\r\n            <p>5:05pm</p>\r\n          </span>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgentMessage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass UserMessage extends Component {\r\n  render() {\r\n    const { msg } = this.props;\r\n    return (\r\n      <div className=\"user-message-container\">\r\n        <div className=\"user-message-card\">\r\n          <p>{msg}</p>\r\n        </div>\r\n        <div className=\"user-date\">5:88 PM</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserMessage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass DashboardItem extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"dashboard-item-card\">\r\n        <h5>{this.props.intent}</h5>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardItem;\r\n","import React from \"react\";\r\n\r\nfunction Loader(props) {\r\n  return (\r\n    <div className=\"loader-container center-child-elements\">\r\n      <div className=\"loader \"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport DashboardItem from \"./DashboardItem\";\r\nimport Loader from \"./Loader\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const DashboardList = [];\r\n    const { intents, inProgress } = this.props;\r\n\r\n    for (var i = 0; i < intents.length; i++) {\r\n      DashboardList.push(<DashboardItem intent={intents[i]} />);\r\n    }\r\n    return (\r\n      <div className=\"dashboard-container\">\r\n        <div className=\"nav-dashboard\">\r\n          <div className=\"triny-logo\">\r\n            <img src=\"https://media-exp1.licdn.com/dms/image/C560BAQGcp8x8DO-jPQ/company-logo_200_200/0/1589439972484?e=2159024400&v=beta&t=pszKMR5SYnxx0c5qVxJ1k9xIXKD94lJuioG1eYQWpDs\"></img>\r\n            <h2>Triny Bot Intent</h2>\r\n          </div>\r\n        </div>\r\n        {inProgress ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className=\"dashboard-list\">{DashboardList}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return { ...state };\r\n}\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React, { Component } from \"react\";\nimport { ChatBotButton, ChatBot, Dashboard } from \"./\";\nimport { connect } from \"react-redux\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Dashboard />\n        {this.props.visibility && <ChatBot />}\n        <ChatBotButton />\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    ...state,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import {\r\n  QUERRY_FAIL,\r\n  QUERRY_START,\r\n  QUERRY_SUCCESS,\r\n  ADD_INTENT,\r\n  VISIBILITY,\r\n} from \"../Action/ActionTypes\";\r\n\r\nconst intialQuerryState = {\r\n  msgLog: [],\r\n  error: null,\r\n  isQuerried: false,\r\n  inProgress: false,\r\n  intents: [],\r\n  visibility: false,\r\n};\r\n\r\nexport default function queryBot(state = intialQuerryState, action) {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case QUERRY_START:\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    case QUERRY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isQuerried: true,\r\n        inProgress: false,\r\n        error: null,\r\n        msgLog: [\r\n          ...state.msgLog,\r\n          { request: action.request, response: action.response },\r\n        ],\r\n      };\r\n    case ADD_INTENT:\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        intents: [...state.intents, action.intent],\r\n      };\r\n    case QUERRY_FAIL:\r\n      return {\r\n        ...state,\r\n        isQuerried: false,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    case VISIBILITY:\r\n      return {\r\n        ...state,\r\n        visibility: action.visibility,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./Components/App\";\nimport { configureStore } from \"./store/index\";\nimport \"./index.css\";\nconst store = configureStore();\nconsole.log(\"store\", store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"../Reducers/queryBot\";\r\n\r\nexport function configureStore() {\r\n  let store = createStore(reducer, applyMiddleware(thunk, logger));\r\n  return store;\r\n}\r\n"],"sourceRoot":""}